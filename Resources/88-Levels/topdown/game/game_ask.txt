I asked this in another session, but didn't get an answer that worked as expected. I fear it was my inability to articulate what I had needed, so I am trying again. I would like to create a multi-level game using PyGame as my code library and this game at its simplest will load tile based map image as the background for each level. This image path, along with other level information will be stored in a local json `config` file. In fact, all of the data necessary to guide the game will be stored in this local json file. More specifically, the json file will contain a "levels" key that points to a dictionary of level names as keys which in turn point to each levels unique characteristics. Specifically, each level will have an image path, a CSV that defines collisions using 0's as open space and 1's as tile locations that cannot be traversed by the player, a range of tiles in which the player can be randomly spawned when entering the level, a list of tiles that trigger transitions to other levels, tiles that trigger random events like an attack by a local NPC monster, or the discovery of treasure. I realize that there is an expectation of creativity that goes in with game design, however, I am asking your more for code organization, allowing for gaps in implementation, rather than a full blown multi level game. One important fact that I would like to specify is that this multi-level game will be displayed in a `pygame.Surface` area called `camera` that is relatively smaller than the entire game window. I want to create two additional PyGame surfaces that represent a side bar, and a bottom bar, each of which could be used for messaging, game play configuration, or multiplayer information. The issue with the main game area (`camera` view), is that I need a player sprite to remain in the general center of this surface. The background should scroll in the opposite direction that the player moves, while attempting to keep the player sprite in the center of the camera surface area. Of course, when the map ends, it should stop scrolling and allow the player to move up to the edge of the camera surface window. Lastly, any calculations done for sprite position or direction I would like them to be done using PyGame's `Vector2` data type.
